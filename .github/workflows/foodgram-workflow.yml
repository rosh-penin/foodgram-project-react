name: DjangoReact-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt

      # - name: Test with flake8 and django tests
      #   run: |
      #     python -m flake8
      #     python -m pytest

  build:
    if: github.ref == 'refs/heads/master'  
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v2 
      - uses: docker/setup-buildx-action@v1 
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v2 
        with:
          context: backend/
          push: true
          tags: roshpenin/foodgram-backend:latest
  
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: garygrossgarten/github-action-scp@release
        with:
          local: infra/
          remote: foodgram/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          privateKey: ${{ secrets.SSH_KEY }}
      # - name: executing remote ssh commands to deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       sudo docker-compose rm -fs web
      #       sudo docker-compose pull web
      #       rm -f .env
      #       touch .env
      #       echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
      #       echo DB_NAME=${{ secrets.DB_NAME }} >> .env
      #       echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
      #       echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
      #       echo DB_HOST=${{ secrets.DB_HOST }} >> .env
      #       echo DB_PORT=${{ secrets.DB_PORT }} >> .env
      #       echo DJANGO_KEY=${{ secrets.DJANGO_KEY }} >> .env
      #       sudo docker-compose up -d
  
  # telegram:
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: Your build of project yamdb_final is success. 